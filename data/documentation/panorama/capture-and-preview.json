{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/panorama\/capture-and-preview"]}],"primaryContentSections":[{"content":[{"text":"Capture","anchor":"Capture","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"code":"PanoramaCaptureView","type":"codeVoice"},{"type":"text","text":" will start capture automatically:"}],"type":"paragraph"},{"code":["class PanoramaCaptureVC: UIViewController {","","  \/\/ Currently we only support one-round capture","  \/\/ So you need to specify the capturing angle when initializing","  let panoramaCaptureView = PanoramaCaptureView(targetCaptureAngle: targetCaptureAngle)","","  override func viewDidLoad() {","    super.viewDidLoad()","","    panoramaCaptureView.delegate = self","    view.addSubview(panoramaCaptureView)","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"After capturing, the panorama will start processing, and "},{"code":"PanoramaCaptureViewDelegate.willStartProcessing","type":"codeVoice"},{"type":"text","text":" will be called:"}],"type":"paragraph"},{"syntax":"swift","code":["extension PanoramaCaptureVC: PanoramaCaptureViewDelegate {","  func willStartProcessing() {","    \/\/ You could start a progress hud here","  }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"After processing, the result will be notified through "},{"code":"PanoramaCaptureViewDelegate.didFinishProcessing","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["extension PanoramaCaptureVC: PanoramaCaptureViewDelegate {","","  func didFinishProcessing(result: Result<UIImage, Error>) {","    switch result {","    case let .success(image):","      \/\/ If successed, you could use the PanoramaView to preview the result","    case let .failure(error):","      \/\/ If failed, you could reset the panorama capture view and start a new session","      panoramaCaptureView.reset()","    }","  }","}"]},{"text":"Preview","level":2,"anchor":"Preview","type":"heading"},{"inlineContent":[{"type":"text","text":"And we provide a panorama viewer class here that you could use:"}],"type":"paragraph"},{"code":["let panoramaView = PanoramaView(panoImage: ...)"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since the panorama we captured only have one round, with limited floors and ceiling views. So we might want to limit the vertical viewing angle of camera:"}]},{"type":"codeListing","syntax":"swift","code":["panoramaView.minimumVerticalAngle = targetCaptureAngle - 20","panoramaView.maximumVerticalAngle = targetCaptureAngle + 20"]}],"kind":"content"}],"sections":[],"kind":"article","abstract":[{"text":"A tutorial that guide you how to use the Panorama module.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.kiriengine.Panorama\/documentation\/Panorama\/Capture-and-preview"},"metadata":{"modules":[{"name":"Panorama"}],"role":"article","title":"Capture and preview","roleHeading":"Article"},"hierarchy":{"paths":[["doc:\/\/com.kiriengine.Panorama\/documentation\/Panorama"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.kiriengine.Panorama/documentation/Panorama":{"type":"topic","identifier":"doc:\/\/com.kiriengine.Panorama\/documentation\/Panorama","role":"collection","kind":"symbol","url":"\/documentation\/panorama","abstract":[{"type":"text","text":"This page contains RoomScanSDK and its related projects documentation."}],"title":"Panorama"}}}